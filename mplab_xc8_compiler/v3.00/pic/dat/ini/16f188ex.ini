#	PICC.INI
#	This file defines the memory sizes and organization
#	of a PIC10/12/16 device
#
#	All values are in hexadecimal unless otherwise stated.
#
#	Fields used are:
#
#	ARCH=<processor_architecture>
#			PIC12, PIC14 or PIC16, corresponding to baseline,
#			midrange and high end respectively
#	PROCID=<id>
#			Microchip processor identifier. This corresponds
#			to the processor field in Microchip COFF output.
#	ROMSIZE=<size_of_rom>
#			Size of program memory (words) in hex
#	BANKS=<num_banks>
#			Number of data memory banks used (for the
#			midrange, this will always be at least 2)
#	RAMBANK=<range_start>,<range_end>
#			This field may appear multiple times and
#			specifies a RAM bank memory range. e.g. A0,BF
#	COMMON=<range_start>,<range_end>
#			Specifies an area of RAM that is mirrored in all
#			banks, i.e. is accessible regardless of RPn settings.
#	ICD1RAM=<range_start>,<range_end>
#			Specifies an area of RAM that is used by
#			MPLAB-ICD
#	ICD2RAM=<range_start>,<range_end>
#			Specifies an area of RAM that is used by
#			MPLAB-ICD2
#	ICD3RAM=<range_start>,<range_end>
#			Specifies an area of RAM that is used by
#			MPLAB-ICD3 and REAL-ICE
#	ICD1ROM=<range_start>,<range_end>
#			Specifies an area of ROM that is used by
#			MPLAB-ICD
#	ICD2ROM=<range_start>,<range_end>
#			Specifies an area of ROM that is used by
#			MPLAB-ICD2
#	ICD3ROM=<range_start>,<range_end>
#			Specifies an area of ROM that is used by
#			MPLAB-ICD3 and REAL-ICE
#	DATABANK=<bank>
#			Identifies which bank the EEDATA/PMDATA register is found.
#			Used for library selection.
#
#	FLASHTYPE=<string>
#			Indicates if and how this midrange processor is capable of reading
#			and how a device can write to its own program memory.
#			READ - Read only
#			READWRITE_1 - Writes one word at a time, erasure is automatic
#			READWRITE_A - Writes done in blocks of words, block erasure automatic
#			READWRITE_B - Writes done in blocks, erasure is separate step
#
#	FLASH_READ=<size>
#			The number of words read in a flash-read operation. Default is zero.
#
#	FLASH_WRITE=<size>
#			The number of words in flash writing block. Default is zero.
#
#	FLASH_ERASE=<size>
#			The number of words in a flash-erase block. Default is FLASH_WRITE size.
#
#	EEPROM=<range_start-range_end>
#			Identifies the range (bytes) of EEPROM available to this device
#
#	FLASHDATA=<range_start-range_end>
#			Defines the range of flash memory used to access EEPROM data
#
#	OSCCAL=<address>
#			The address where the OSCCAL sfr is located.
#
#	OSCCON=<address>
#			The address where the OSCCON sfr is located.
#
#	OSCHOW=<string>
#			How does the device calibrate its oscillator?
#			RETLW - The device's oscillator calibration constant is stored at the top
#			of program memory in a RETLW instruction, the compiler can assign this
#			to the OSCCAL sfr which is located at OSCCAL.
#			CALWORD - The device stores the oscillator constant in a calibration
#			word located in flash program memory.  The word is read from program
#			memory and assigned to OSCCAL.  The compiler does not perform this
#			operation.  It must be done by the user's program.
#
#	CONFIG=<range_start-range_end>
#			Define a new address range for the configuration register region if
#			the address range differs from the traditional range for its
#			architecture type.
#
#	IDLOC=<range_start-range_end>
#			Define a new address range for the user ID location region if
#			the address range differs from the traditional range for its
#			architecture type.
#
#	STACKDEPTH=<limit>
#			This is used set the maximum stack level depth for a processor. If not specified,
#			the default setting will be 2 for baseline PICs, 8 for midrange PICs and 16 for
#			high-end PICs and enhanced mid-range PICs.
#
#	VOLSFRS=<range_start>-<range_end>,...
#			Instructions generated by the compiler that access SFRs in the given memory
#			ranges will won't be optimized by the assembly optimizer
#
#	BANKSIZE=<size>
#			Maximum number of bytes in a RAM bank.
#
#	PAGESIZE=<size>
#			Maximum number of words in a program memory page.
#
#	LINEARBASE=<addr>
#			Base address of the virtual linear data memory, exclusive to enhanced mid-range devices.
#
#   PCBITS=<number of bits>
#           How many implemented bits are there in the PC?
#
#   EEADRBITS=<number of bits>
#           How many bits are available to address data EEPROM, if any.
#
#   BANKSELBITS=<number of bits>
#           Number of bits available for bank-selection.
#
#   EEPROMINT=<EEREG_INT|NVMREG_INT>
#   		Which register interface is used to access the device's EEPROM, if any.
#
#	SFR=<name>,<address>,<bit-width>
#			Describes a SFR of the device.  The address is in hexadecimal, and the bit-width decimal.
#			SFRs are sorted in order of address, and then by bit-width in descending order.  If an SFR duplicates
#			an address, then that SFR is an alias of the first with that address.  An SFR that has a bit-width
#			greater than the next, but the next also shares the same address, then that SFR is a joined SFR
#			of those that follow, but limited by its bit-width.
#
#	SFRFLD=<name>,<address>,<bit-position>,<bit-width>
#			Describes a SFR bit-field of the device.  The address is in hexadecimal, and the bit-width and
#			bit-position are decimal. SFRFLDs are sorted in order of address.
#
#	CONFIGPROG=<num_regs>,<delta>,<alignment>
#	IDLOCPROG=<num_regs>,<delta>,<alignment>
#			These describe the programming characteristics of configuration and user id memory.
#			Where,
#			<num_regs> = the number of registers (equivalent to a CWORD in CFGDATA files) per programming unit.
#			<delta> = the address delta between contiguous registers, i.e. the addresses of a CWORD.
#			<alignment> = the address alignment of programming units, where the address is that of the first CWORD
#							in the programming unit.
#

# Test chip for Microchip use only
[16F188EX]
ALIAS=16F18875
ARCH=PIC14EX
BANKS=40
BANKSELBITS=0x6
BANKSIZE=0x80
COMMON=70-7F,F0-FF,170-17F,1F0-1FF,270-27F,2F0-2FF,370-37F,3F0-3FF,470-47F,4F0-4FF,570-57F,5F0-5FF,670-67F,6F0-6FF,770-77F,7F0-7FF,870-87F,8F0-8FF,970-97F,9F0-9FF,A70-A7F,AF0-AFF,B70-B7F,BF0-BFF,C70-C7F,CF0-CFF,D70-D7F,DF0-DFF,E70-E7F,EF0-EFF,F70-F7F,FF0-FFF,1070-107F,10F0-10FF,1170-117F,11F0-11FF,1270-127F,12F0-12FF,1370-137F,13F0-13FF,1470-147F,14F0-14FF,1570-157F,15F0-15FF,1670-167F,16F0-16FF,1770-177F,17F0-17FF,1870-187F,18F0-18FF,1970-197F,19F0-19FF,1A70-1A7F,1AF0-1AFF,1B70-1B7F,1BF0-1BFF,1C70-1C7F,1CF0-1CFF,1D70-1D7F,1DF0-1DFF,1E70-1E7F,1EF0-1EFF,1F70-1F7F,1FF0-1FFF
CONFIG=8007-800B
FLASHDATA=F000-F0FF
FLASHTYPE=READWRITE_A
FLASH_ERASE=20
FLASH_READ=1
FLASH_WRITE=20
IDLOC=8000-8003
LINEARBASE=0x2000
MAKE=TEST
PAGESIZE=0x800
PCBITS=0xF
PROCID=8875
RAMBANK=20-7F,A0-EF,120-16F,1A0-1EF,220-26F,2A0-2EF,320-36F,3A0-3EF,420-46F,4A0-4EF,520-56F,5A0-5EF,620-66F,6A0-6EF,720-76F,7A0-7EF,820-86F,8A0-8EF,920-96F,9A0-9EF,A20-A6F,AA0-AEF,B20-B6F,BA0-BEF,C20-C6F,CA0-CEF,D20-D6F,DA0-DEF,E20-E6F,EA0-EEF,F20-F6F,FA0-FEF,1020-106F,10A0-10EF,1120-116F,11A0-11EF,1220-126F,12A0-12EF,1320-136F,13A0-13EF,1420-146F,14A0-14EF,1520-156F,15A0-15EF,1620-166F,16A0-16EF,1720-176F,17A0-17EF,1820-186F,18A0-18EF,1920-196F,19A0-19EF,1A20-1A6F,1AA0-1AEF,1B20-1B6F,1BA0-1BEF,1C20-1C6F,1CA0-1CEF,1D20-1D6F,1DA0-1DEF,1E20-1E6F,1EA0-1EEF,1F20-1F6F,1FA0-1FEF
ROMSIZE=8000
STACKDEPTH=10
VOLSFRS=F8C-F8E,F90-F91,FE3-FEB,FED-FEF
