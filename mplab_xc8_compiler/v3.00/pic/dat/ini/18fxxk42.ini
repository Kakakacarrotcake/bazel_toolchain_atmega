#	PICC-18.INI
#	This file defines the memory sizes and organization
#	of a PIC18 device
#
#	Fields used are:
#
#	MAKE=<Name_of_manufacturer>
#			Identifies the manufacturer of this part.
#	ARCH=<processor_architecture>
#			PIC18 corresponds to the PIC18 architecture.
#	PROCID=<id>
#			Microchip processor identifier. This corresponds
#			to the processor field in Microchip COFF output.
#	ROMSIZE=<size_of_rom>
#			Size of program memory (bytes) in hex
#	RAMSIZE=<size_of_ram>
#			Size of data RAM (bytes) in hex
#	GPRBANKS=<range_start>-<range_end>,...
#			Specifies regions of banked memory used as GPRs, each range must be
#			be wholly located within a bank
#	SFRBANKS=<range_start>-<range_end>,...
#			Specifies regions of banked memory used for SFRs
#	COMMON=<range_start>-<range_end>
#			Specifies an area of GPRs that is mirrored in all banks.
#	SFRCOMMON=<range_start>-<range_end>
#			Specifies an area of SFRs that is mirrored in all banks.
#	ICD2RAM=<range_start>-<range_end>
#			Specifies an area of RAM that is used by
#			MPLAB-ICD2
#	ICD2ROM=<range_start>-<range_end>
#			Specifies an area of ROM that is used by
#			MPLAB-ICD2
#	CFGMEM=<range_start>-<range_end>
#			The region in memory in which the configuration bits are programmed.
#	USERIDMEM=<range_start>-<range_end>
#			The region in memory in which the user ids are programmed.
#	DEVIDMEM=<range_start>-<range_end>
#			The region in memory in which the device id is located.
#	REVIDMEM=<range_start>-<range_end>
#			The region in memory in which the revision id is located.
#	DIAMEM=<range_start>-<range_end>
#			The region in memory in which the Device Information Area (DIA) is located.
#	DCIMEM=<range_start>-<range_end>
#			The region in memory in which the Device Configuration Information (DCI) is located.
#	REALICE ranges apply to both the MPLAB REALICE and ICD3
#	They must include sufficient resources for both hardware and software
#   breakpoints where applicable
#	REALICEROM=<range_start>,<range_end>
#			Specifies an area of ROM that is used by
#			MPLAB-REALICE and MPLAB-ICD3
#	REALICERAM=<range_start>,<range_end>
#			Specifies an area of RAM that is used by
#			MPLAB-REALICE and MPLAB-ICD3
#	EXTMEM=<range_start>-<range-end>
#			Defines the address range of the external memory interface
#			for those chips which have one.
#	EEPROM=<range_start>,<range_end>
#			The addressable region of memory which contains EEPROM
#	FLASH_EW=<erase_size,write_size>
#			Defines the block erase size (bytes) of flash erase operations,
#			and the buffered write size (bytes) of flash write operations.
#	ERRATA=<bug1,bug2,bug3...>
#			List the default errata conditions to apply to this device
#			Handled errata types are:
#			4000 - Program mem accesses/jumps across 4000h address boundary
#			LFSR - Broken LFSR instruction
#			DAW - Broken DAW instruction
#			MINUS40 - Program memory reads at -40.C
#			EEPROMRD - Read EEDAT in immeadiate instruction after RD set
#			EEPROMADR - Don't set RD bit immediately after loading EEADR
#			EEPROMLVD - LVD must stabilise before writing EEPROM
#			FLASHLVD - LVD must stabilise before writing Flash
#			RESET - Needs NOP at Reset vector
#			FASTINTS - Fast interrupt shadow registers corruption
#			BSR15 - Flag problems when BSR holds value 15
#			TBLWTINT - clear interrupt registers before tblwt instruction
#			FW4000 - flash write exe must act on opposite side of 4000h boundary.
#			RESETRAM - RAM content can be corrupted during asynchronous reset
#			FETCH - Instruction fetches can be corrupted. FFFF after TBLRD, RETxx,
#				 at destination of GOTO/CALL instructions and at ISR vector addresses.
#	STACKDEPTH=<limit>
#			This is used set the maximum stack level depth for a processor. If not specified,
#			the default setting will be 31.
#	PLIB=[0|1]
#			Whether the peripheral library is supported for this device.
#   PCBITS=<number of bits>
#           How many implemented bits are there in the PC?
#   EEADRBITS=<number of bits)
#           How many bits are available to address EEPROM, if any.
#   BSTBITS=<number of bits>
#           How many bits are avalable in BSR for bank selection.
#	IVTBASE=<IVTBASEL address>,<IVTBASEL reset>,<IVTBASEH address>,<IVTBASEH reset>,<IVTBASEU address>,<IVTBASEU reset>
#			If the device has can have an interrupt vector table, this will describe the address and reset value of the
#			IVTBASE registers.  All values are in unqualified hexadecimal.
#	INTSTAT=<address>,<high-priority bit>,<low-priority bit>
#			If the device has can have an interrupt vector table, this will describe the location of the
#			INTCON1<INTSTAT> bits.  The first value is the address of the INTCON1 register in unqualified hexadecimal.
#			The remaining values are the positions of the bits that indicate which interrupt priority-levels are active.
#	INTSRC=<name>,<irq number>,<description>
#			If the device has can have an interrupt vector table, then each interrupt source will be described by one
#			of these fields.  The IRQ number is in decimal.
#	IVTENABLE=<config_setting>,<value>
#			If the device can have an interrupt vector table, then what is the configuration programming required
#			to enable it?
#	VOLSFRS=<range_start>-<range_end>,...
#			Instructions generated by the compiler that access SFRs in the given memory
#			ranges will won't be optimized by the assembly optimizer
#	SFR=<name>,<address>,<bit-width>
#			Describes a SFR of the device.  The address is in hexadecimal, and the bit-width decimal.
#			SFRs are sorted in order of address, and then by bit-width in descending order.  If an SFR duplicates
#			an address, then that SFR is an alias of the first with that address.  An SFR that has a bit-width
#			greater than the next, but the next also shares the same address, then that SFR is a joined SFR
#			of those that follow, but limited by its bit-width.
#	SFRFLD=<name>,<address>,<bit-position>,<bit-width>
#			Describes a SFR bit-fieldof the device.  The address is in hexadecimal, and the bit-width and
#			bit-position are decimal. SFRFLDs are sorted in order of address.
#	CFGPROG=<num_regs>,<delta>,<alignment>
#	USERIDPROG=<num_regs>,<delta>,<alignment>
#			These describe the programming characteristics of configuration and user id memory.
#			Where,
#			<num_regs> = the number of registers (equivalent to a CWORD in CFGDATA files) per programming unit.
#			<delta> = the address delta between contiguous registers, i.e. the addresses of a CWORD.
#			<alignment> = the address alignment of programming units, where the address is that of the first CWORD
#							in the programming unit.
#

# Test chip for Microchip use only
[18FXXK42]
ALIAS=18F25K42
ARCH=PIC18XV
BSRBITS=0x6
CFGMEM=300000-300009
COMMON=00-5F
DCIMEM=3FFF00-3FFF09
DEVIDMEM=3FFFFE-3FFFFF
DIAMEM=3F0000-3F003F
EEADRBITS=0xA
EEPROM=310000-3100FF
FAMILY=18fxxk42
GPRBANKS=060-0FF,100-1FF,200-2FF,300-3FF,400-4FF,500-5FF,600-6FF,700-7FF,800-8FF,900-9FF,A00-AFF,B00-BFF,C00-CFF,D00-DFF,E00-EFF,F00-FFF,1000-10FF,1100-11FF,1200-12FF,1300-13FF,1400-14FF,1500-15FF,1600-16FF,1700-17FF,1800-18FF,1900-19FF,1A00-1AFF,1B00-1BFF,1C00-1CFF,1D00-1DFF,1E00-1EFF,1F00-1FFF,2000-20FF,2100-21FF,2200-22FF,2300-23FF,2400-24FF,2500-25FF,2600-26FF,2700-27FF,2800-28FF,2900-29FF,2A00-2AFF,2B00-2BFF,2C00-2CFF,2D00-2DFF,2E00-2EFF,2F00-2FFF,3000-30FF,3100-31FF,3200-32FF,3300-33FF,3400-34FF,3500-35FF,3600-36FF,3700-37FF
INTSRC=SWINT,0,Software*Interrupt
INTSRC=HLVD,1,HLVD*Interrupt
INTSRC=OSF,2,Oscillator*Failure*Interrupt
INTSRC=CSW,3,Clock*Switch*Interrupt
INTSRC=NVM,4,NVM*Interrupt
INTSRC=SCAN,5,Scanner*Interrupt
INTSRC=CRC,6,CRC*Interrupt
INTSRC=IOC,7,Interrupt*on*change
INTSRC=INT0,8,External*Interrupt*0
INTSRC=ZCD,9,ZCD*Interrupt
INTSRC=AD,10,ADC*Interrupt
INTSRC=ADT,11,ADC*Treshold*Interrupt
INTSRC=CMP1,12,Comparator*1*Interrupt
INTSRC=SMT1,13,SMT1*Interrupt
INTSRC=SMT1PRA,14,SMT1*Period*acqusition*Interrupt
INTSRC=SMT1PRW,15,SMT1*Pulse*width*acqusition*Interrupt
INTSRC=DMA1SCNT,16,DMA1*Source*count*Interrupt
INTSRC=DMA1DCNT,17,DMA1*Destination*count*Interrupt
INTSRC=DMA1OVR,18,DMA1*Overflow*Interrupt
INTSRC=DMA1ARBT,19,DMA1*Arbiter*Interrupt
INTSRC=SPI1R,20,SPI1*Receive*Interrupt
INTSRC=SPI1T,21,SPI1*Transmit*Interrupt
INTSRC=SPI1,22,SPI1*Interrupt
INTSRC=I2C1R,23,I2C1*Receive*Interrupt
INTSRC=I2C1T,24,I2C1*Transmit*Interrupt
INTSRC=I2C1,25,I2C1*Interrupt
INTSRC=I2C1E,26,I2C1*Error*Interrupt
INTSRC=U1R,27,UART1*Receive*Interrupt
INTSRC=U1T,28,UART1*Transmit*Interrupt
INTSRC=U1E,29,UART1*Error*Interrupt
INTSRC=U1G,30,UART1*Interrupt
INTSRC=TMR0,31,Timer0*Interrupt
INTSRC=TMR1,32,Timer1*Interrupt
INTSRC=TMR1G,33,Timer1*Gate*Interrupt
INTSRC=TMR2,34,Timer2*Interrupt
INTSRC=CCP1,35,CCP1*Interrupt
INTSRC=NCO1,37,NCO1*Interrupt
INTSRC=CWG1,38,CWG1*Interrupt
INTSRC=CLC1,39,CLC1*Interrupt
INTSRC=INT1,40,External*Interrupt*1
INTSRC=CMP2,41,Comparator*2*Interrupt
INTSRC=DMA2SCNT,42,DMA2*Source*count*Interrupt
INTSRC=DMA2DCNT,43,DMA2*Destination*count*Interrupt
INTSRC=DMA2OVR,44,DMA2*Overflow*Interrupt
INTSRC=DMA2ARBT,45,DMA2*Arbiter*Interrupt
INTSRC=I2C2R,46,I2C2*Receive*Interrupt
INTSRC=I2C2T,47,I2C2*Transmit*Interrupt
INTSRC=I2C2,48,I2C2*Interrupt
INTSRC=I2C2E,49,I2C2*Error*Interrupt
INTSRC=U2R,50,UART2*Receive*Interrupt
INTSRC=U2T,51,UART2*Transmit*Interrupt
INTSRC=U2E,52,UART2*Error*Interrupt
INTSRC=U2G,53,UART2*Interrupt
INTSRC=TMR3,54,Timer3*Interrupt
INTSRC=TMR3G,55,Timer3*Gate*Interrupt
INTSRC=TMR4,56,Timer4*Interrupt
INTSRC=CCP2,57,CCP2*Interrupt
INTSRC=CWG2,59,CWG2*Interrupt
INTSRC=CLC2,60,CLC2*Interrupt
INTSRC=INT2,61,External*Interrupt*2
INTSRC=TMR5,70,Timer5*Interrupt
INTSRC=TMR5G,71,Timer5*Gate*Interrupt
INTSRC=TMR6,72,Timer6*Interrupt
INTSRC=CCP3,73,CCP3*Interrupt
INTSRC=CWG3,74,CWG3*Interrupt
INTSRC=CLC3,75,CLC3*Interrupt
INTSRC=CCP4,80,CCP4*Interrupt
INTSRC=CLC4,81,CLC4*Interrupt
INTSTAT=3FD3,7,6
IVTBASE=3FD5,8,3FD6,0,3FD7,0
IVTENABLE=MVECEN,1
MAKE=TEST
PCBITS=0x15
PROCID=A29B
RAMSIZE=3800
REVIDMEM=3FFFFC-3FFFFD
ROMSIZE=20000
SFR=BSR,3FE0
SFR=FSR0H,3FEA
SFR=FSR0L,3FE9
SFR=FSR1H,3FE2
SFR=FSR1L,3FE1
SFR=FSR2H,3FDA
SFR=FSR2L,3FD9
SFR=INDF0,3FEF
SFR=INDF1,3FE7
SFR=INDF2,3FDF
SFR=PCL,3FF9
SFR=PCLATH,3FFA
SFR=PCLATU,3FFB
SFR=PLUSW0,3FEB
SFR=PLUSW1,3FE3
SFR=PLUSW2,3FDB
SFR=POSTDEC0,3FED
SFR=POSTDEC1,3FE5
SFR=POSTDEC2,3FDD
SFR=POSTINC0,3FEE
SFR=POSTINC1,3FE6
SFR=POSTINC2,3FDE
SFR=PREINC0,3FEC
SFR=PREINC1,3FE4
SFR=PREINC2,3FDC
SFR=PRODH,3FF4
SFR=PRODL,3FF3
SFR=STATUS,3FD8
SFR=STKPTR,3FFC
SFR=TABLAT,3FF5
SFR=TBLPTRH,3FF7
SFR=TBLPTRL,3FF6
SFR=TBLPTRU,3FF8
SFR=TOSH,3FFE
SFR=TOSL,3FFD
SFR=TOSU,3FFF
SFR=WREG,3FE8
SFRBANKS=3800-38FF,3900-39FF,3A00-3AFF,3B00-3BFF,3C00-3CFF,3D00-3DFF,3E00-3EFF,3F00-3F5F,3F60-3FFF
SFRCOMMON=3F60-3FFF
STACKDEPTH=1F
USERIDMEM=200000-20000F
