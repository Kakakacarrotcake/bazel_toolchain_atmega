# Generated 05/12/2024 GMT

# Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
# All rights reserved.
# 
# This software is developed by Microchip Technology Inc. and its subsidiaries ("Microchip").
# 
# Redistribution and use in source and binary forms, with or without modification, are
# permitted provided that the following conditions are met:
# 
#     1. Redistributions of source code must retain the above copyright notice, this list of
#        conditions and the following disclaimer.
# 
#     2. Redistributions in binary form must reproduce the above copyright notice, this list
#        of conditions and the following disclaimer in the documentation and/or other
#        materials provided with the distribution. Publication is not required when
#        this file is used in an embedded application.
# 
#     3. Microchip's name may not be used to endorse or promote products derived from this
#        software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#	PICC.INI
#	This file defines the memory sizes and organization
#	of a PIC10/12/16 device
#
#	All values are in hexadecimal unless otherwise stated.
#
#	Fields used are:
#
#	ARCH=<processor_architecture>
#			PIC12, PIC14 or PIC16, corresponding to baseline,
#			midrange and high end respectively
#	PROCID=<id>
#			Microchip processor identifier. This corresponds
#			to the processor field in Microchip COFF output.
#	ROMSIZE=<size_of_rom>
#			Size of program memory (words) in hex
#	BANKS=<num_banks>
#			Number of data memory banks used (for the
#			midrange, this will always be at least 2)
#	RAMBANK=<range_start>,<range_end>
#			This field may appear multiple times and
#			specifies a RAM bank memory range. e.g. A0,BF
#	COMMON=<range_start>,<range_end>
#			Specifies an area of RAM that is mirrored in all
#			banks, i.e. is accessible regardless of RPn settings.
#	ICD1RAM=<range_start>,<range_end>
#			Specifies an area of RAM that is used by
#			MPLAB-ICD
#	ICD2RAM=<range_start>,<range_end>
#			Specifies an area of RAM that is used by
#			MPLAB-ICD2
#	ICD3RAM=<range_start>,<range_end>
#			Specifies an area of RAM that is used by
#			MPLAB-ICD3 and REAL-ICE
#	ICD1ROM=<range_start>,<range_end>
#			Specifies an area of ROM that is used by
#			MPLAB-ICD
#	ICD2ROM=<range_start>,<range_end>
#			Specifies an area of ROM that is used by
#			MPLAB-ICD2
#	ICD3ROM=<range_start>,<range_end>
#			Specifies an area of ROM that is used by
#			MPLAB-ICD3 and REAL-ICE
#	DATABANK=<bank>
#			Identifies which bank the EEDATA/PMDATA register is found.
#			Used for library selection.
#
#	FLASHTYPE=<string>
#			Indicates if and how this midrange processor is capable of reading
#			and how a device can write to its own program memory.
#			READ - Read only
#			READWRITE_1 - Writes one word at a time, erasure is automatic
#			READWRITE_A - Writes done in blocks of words, block erasure automatic
#			READWRITE_B - Writes done in blocks, erasure is separate step
#
#	FLASH_READ=<size>
#			The number of words read in a flash-read operation. Default is zero.
#
#	FLASH_WRITE=<size>
#			The number of words in flash writing block. Default is zero.
#
#	FLASH_ERASE=<size>
#			The number of words in a flash-erase block. Default is FLASH_WRITE size.
#
#	EEPROM=<range_start-range_end>
#			Identifies the range (bytes) of EEPROM available to this device
#
#	FLASHDATA=<range_start-range_end>
#			Defines the range of flash memory used to access EEPROM data
#
#	OSCCAL=<address>
#			The address where the OSCCAL sfr is located.
#
#	OSCCON=<address>
#			The address where the OSCCON sfr is located.
#
#	OSCHOW=<string>
#			How does the device calibrate its oscillator?
#			RETLW - The device's oscillator calibration constant is stored at the top
#			of program memory in a RETLW instruction, the compiler can assign this
#			to the OSCCAL sfr which is located at OSCCAL.
#			CALWORD - The device stores the oscillator constant in a calibration
#			word located in flash program memory.  The word is read from program
#			memory and assigned to OSCCAL.  The compiler does not perform this
#			operation.  It must be done by the user's program.
#
#	CONFIG=<range_start-range_end>
#			Define a new address range for the configuration register region if
#			the address range differs from the traditional range for its
#			architecture type.
#
#	IDLOC=<range_start-range_end>
#			Define a new address range for the user ID location region if
#			the address range differs from the traditional range for its
#			architecture type.
#
#	STACKDEPTH=<limit>
#			This is used set the maximum stack level depth for a processor. If not specified,
#			the default setting will be 2 for baseline PICs, 8 for midrange PICs and 16 for
#			high-end PICs and enhanced mid-range PICs.
#
#	VOLSFRS=<range_start>-<range_end>,...
#			Instructions generated by the compiler that access SFRs in the given memory
#			ranges will won't be optimized by the assembly optimizer
#
#	BANKSIZE=<size>
#			Maximum number of bytes in a RAM bank.
#
#	PAGESIZE=<size>
#			Maximum number of words in a program memory page.
#
#	LINEARBASE=<addr>
#			Base address of the virtual linear data memory, exclusive to enhanced mid-range devices.
#
#   PCBITS=<number of bits>
#           How many implemented bits are there in the PC?
#
#   EEADRBITS=<number of bits>
#           How many bits are available to address data EEPROM, if any.
#
#   BANKSELBITS=<number of bits>
#           Number of bits available for bank-selection.
#
#   EEPROMINT=<EEREG_INT|NVMREG_INT>
#   		Which register interface is used to access the device's EEPROM, if any.
#
#	SFR=<name>,<address>,<bit-width>
#			Describes a SFR of the device.  The address is in hexadecimal, and the bit-width decimal.
#			SFRs are sorted in order of address, and then by bit-width in descending order.  If an SFR duplicates
#			an address, then that SFR is an alias of the first with that address.  An SFR that has a bit-width
#			greater than the next, but the next also shares the same address, then that SFR is a joined SFR
#			of those that follow, but limited by its bit-width.
#
#	SFRFLD=<name>,<address>,<bit-position>,<bit-width>
#			Describes a SFR bit-field of the device.  The address is in hexadecimal, and the bit-width and
#			bit-position are decimal. SFRFLDs are sorted in order of address.
#
#	CONFIGPROG=<num_regs>,<delta>,<alignment>
#	IDLOCPROG=<num_regs>,<delta>,<alignment>
#			These describe the programming characteristics of configuration and user id memory.
#			Where,
#			<num_regs> = the number of registers (equivalent to a CWORD in CFGDATA files) per programming unit.
#			<delta> = the address delta between contiguous registers, i.e. the addresses of a CWORD.
#			<alignment> = the address alignment of programming units, where the address is that of the first CWORD
#							in the programming unit.
#

[16F570]
ARCH=PIC12IE
BANKS=8
BANKSELBITS=0x3
BANKSIZE=0x20
COMMON=0C-0F,2C-2F,4C-4F,6C-6F,8C-8F,AC-AF,CC-CF,EC-EF
CONFIG=FFF-FFF
CONFIGPROG=1,1,1
DATABANK=1
EEPROMINT=EEREG_INT
FLASHDATA=800-83F
FLASHTYPE=READWRITE_B
FLASH_ERASE=4
FLASH_READ=1
FLASH_WRITE=4
IDLOC=840-843
IDLOCPROG=1,1,1
MAKE=MICROCHIP
OSCCAL=5
OSCHOW=RETLW
PAGESIZE=0x200
PCBITS=0xC
PROCID=F570
RAMBANK=0C-1F,30-3F,50-5F,70-7F,90-9F,B0-BF,D0-DF,F0-FF
ROMSIZE=800
SFR=INDF,0,8
SFR=TMR0,1,8
SFR=PCL,2,8
SFR=STATUS,3,8
SFR=FSR,4,8
SFR=OSCCAL,5,8
SFR=PORTA,6,8
SFR=PORTB,7,8
SFR=PORTC,8,8
SFR=ADCON0,9,8
SFR=ADRES,A,8
SFR=INTCON0,B,8
SFR=INTCON,B,8
SFR=EECON,21,8
SFR=EEDATA,25,8
SFR=EEADR,26,8
SFR=CM1CON0,27,8
SFR=CM2CON0,28,8
SFR=VRCON,29,8
SFR=ANSEL,2A,8
SFR=IW,61,8
SFR=INTCON1,65,8
SFR=INTIE_REG,65,8
SFR=ISTATUS,66,8
SFR=IFSR,67,8
SFR=IBSR,68,8
SFR=OPACON,69,8
SFRFLD=INDF,0,0,8
SFRFLD=TMR0,1,0,8
SFRFLD=PCL,2,0,8
SFRFLD=C,3,0,1
SFRFLD=DC,3,1,1
SFRFLD=Z,3,2,1
SFRFLD=nPD,3,3,1
SFRFLD=nTO,3,4,1
SFRFLD=PA0,3,5,1
SFRFLD=PA1,3,6,1
SFRFLD=PA2,3,7,1
SFRFLD=CARRY,3,0,1
SFRFLD=ZERO,3,2,1
SFRFLD=FSR,4,0,8
SFRFLD=CAL,5,1,7
SFRFLD=CAL0,5,1,1
SFRFLD=CAL1,5,2,1
SFRFLD=CAL2,5,3,1
SFRFLD=CAL3,5,4,1
SFRFLD=CAL4,5,5,1
SFRFLD=CAL5,5,6,1
SFRFLD=CAL6,5,7,1
SFRFLD=RA,6,0,8
SFRFLD=RA0,6,0,1
SFRFLD=RA1,6,1,1
SFRFLD=RA2,6,2,1
SFRFLD=RA3,6,3,1
SFRFLD=RA4,6,4,1
SFRFLD=RA5,6,5,1
SFRFLD=RA6,6,6,1
SFRFLD=RA7,6,7,1
SFRFLD=RB,7,0,8
SFRFLD=RB0,7,0,1
SFRFLD=RB1,7,1,1
SFRFLD=RB2,7,2,1
SFRFLD=RB3,7,3,1
SFRFLD=RB4,7,4,1
SFRFLD=RB5,7,5,1
SFRFLD=RB6,7,6,1
SFRFLD=RB7,7,7,1
SFRFLD=RC,8,0,8
SFRFLD=RC0,8,0,1
SFRFLD=RC1,8,1,1
SFRFLD=RC2,8,2,1
SFRFLD=RC3,8,3,1
SFRFLD=RC4,8,4,1
SFRFLD=RC5,8,5,1
SFRFLD=RC6,8,6,1
SFRFLD=RC7,8,7,1
SFRFLD=ADON,9,0,1
SFRFLD=GO_nDONE,9,1,1
SFRFLD=CHS,9,2,4
SFRFLD=ADCS,9,6,2
SFRFLD=GO,9,1,1
SFRFLD=CHS0,9,2,1
SFRFLD=CHS1,9,3,1
SFRFLD=CHS2,9,4,1
SFRFLD=CHS3,9,5,1
SFRFLD=ADCS0,9,6,1
SFRFLD=ADCS1,9,7,1
SFRFLD=NOT_DONE,9,1,1
SFRFLD=ADRES,A,0,8
SFRFLD=ADRES0,A,0,1
SFRFLD=ADRES1,A,1,1
SFRFLD=ADRES2,A,2,1
SFRFLD=ADRES3,A,3,1
SFRFLD=ADRES4,A,4,1
SFRFLD=ADRES5,A,5,1
SFRFLD=ADRES6,A,6,1
SFRFLD=ADRES7,A,7,1
SFRFLD=GIE,B,0,1
SFRFLD=RBIF,B,4,1
SFRFLD=T0IF,B,5,1
SFRFLD=CWIF,B,6,1
SFRFLD=ADIF,B,7,1
SFRFLD=RD,21,0,1
SFRFLD=WR,21,1,1
SFRFLD=WREN,21,2,1
SFRFLD=WRERR,21,3,1
SFRFLD=FREE,21,4,1
SFRFLD=EEDATA,25,0,8
SFRFLD=EEADR,26,0,6
SFRFLD=nC1WU,27,0,1
SFRFLD=C1PREF,27,1,1
SFRFLD=C1NREF,27,2,1
SFRFLD=C1ON,27,3,1
SFRFLD=nC1T0CS,27,4,1
SFRFLD=C1POL,27,5,1
SFRFLD=nC1OUTEN,27,6,1
SFRFLD=C1OUT,27,7,1
SFRFLD=nC2WU,28,0,1
SFRFLD=C2PREF1,28,1,1
SFRFLD=C2NREF,28,2,1
SFRFLD=C2ON,28,3,1
SFRFLD=C2PREF2,28,4,1
SFRFLD=C2POL,28,5,1
SFRFLD=nC2OUTEN,28,6,1
SFRFLD=C2OUT,28,7,1
SFRFLD=VR,29,0,4
SFRFLD=VRR,29,4,1
SFRFLD=VROE2,29,5,1
SFRFLD=VROE1,29,6,1
SFRFLD=VREN,29,7,1
SFRFLD=VR0,29,0,1
SFRFLD=VR1,29,1,1
SFRFLD=VR2,29,2,1
SFRFLD=VR3,29,3,1
SFRFLD=ANS0,2A,0,1
SFRFLD=ANS1,2A,1,1
SFRFLD=ANS2,2A,2,1
SFRFLD=ANS3,2A,3,1
SFRFLD=ANS4,2A,4,1
SFRFLD=ANS5,2A,5,1
SFRFLD=ANS6,2A,6,1
SFRFLD=ANS7,2A,7,1
SFRFLD=IWREG,61,0,8
SFRFLD=WUR,65,0,1
SFRFLD=RBIE,65,4,1
SFRFLD=T0IE,65,5,1
SFRFLD=CWIE,65,6,1
SFRFLD=ADIE,65,7,1
SFRFLD=C,66,0,1
SFRFLD=DC,66,1,1
SFRFLD=Z,66,2,1
SFRFLD=nPD,66,3,1
SFRFLD=nTO,66,4,1
SFRFLD=PA0,66,5,1
SFRFLD=PA1,66,6,1
SFRFLD=PA2,66,7,1
SFRFLD=IFSR,67,0,8
SFRFLD=IBSR,68,0,3
SFRFLD=OPA1ON,69,0,1
SFRFLD=OPA2ON,69,1,1
STACKDEPTH=4
