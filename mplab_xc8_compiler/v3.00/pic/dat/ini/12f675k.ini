#	PICC.INI
#	This file defines the memory sizes and organization
#	of a PIC10/12/16 device
#
#	All values are in hexadecimal unless otherwise stated.
#
#	Fields used are:
#
#	ARCH=<processor_architecture>
#			PIC12, PIC14 or PIC16, corresponding to baseline,
#			midrange and high end respectively
#	PROCID=<id>
#			Microchip processor identifier. This corresponds
#			to the processor field in Microchip COFF output.
#	ROMSIZE=<size_of_rom>
#			Size of program memory (words) in hex
#	BANKS=<num_banks>
#			Number of data memory banks used (for the
#			midrange, this will always be at least 2)
#	RAMBANK=<range_start>,<range_end>
#			This field may appear multiple times and
#			specifies a RAM bank memory range. e.g. A0,BF
#	COMMON=<range_start>,<range_end>
#			Specifies an area of RAM that is mirrored in all
#			banks, i.e. is accessible regardless of RPn settings.
#	ICD1RAM=<range_start>,<range_end>
#			Specifies an area of RAM that is used by
#			MPLAB-ICD
#	ICD2RAM=<range_start>,<range_end>
#			Specifies an area of RAM that is used by
#			MPLAB-ICD2
#	ICD3RAM=<range_start>,<range_end>
#			Specifies an area of RAM that is used by
#			MPLAB-ICD3 and REAL-ICE
#	ICD1ROM=<range_start>,<range_end>
#			Specifies an area of ROM that is used by
#			MPLAB-ICD
#	ICD2ROM=<range_start>,<range_end>
#			Specifies an area of ROM that is used by
#			MPLAB-ICD2
#	ICD3ROM=<range_start>,<range_end>
#			Specifies an area of ROM that is used by
#			MPLAB-ICD3 and REAL-ICE
#	DATABANK=<bank>
#			Identifies which bank the EEDATA/PMDATA register is found.
#			Used for library selection.
#
#	FLASHTYPE=<string>
#			Indicates if and how this midrange processor is capable of reading
#			and how a device can write to its own program memory.
#			READ - Read only
#			READWRITE_1 - Writes one word at a time, erasure is automatic
#			READWRITE_A - Writes done in blocks of words, block erasure automatic
#			READWRITE_B - Writes done in blocks, erasure is separate step
#
#	FLASH_READ=<size>
#			The number of words read in a flash-read operation. Default is zero.
#
#	FLASH_WRITE=<size>
#			The number of words in flash writing block. Default is zero.
#
#	FLASH_ERASE=<size>
#			The number of words in a flash-erase block. Default is FLASH_WRITE size.
#
#	EEPROM=<range_start-range_end>
#			Identifies the range (bytes) of EEPROM available to this device
#
#	FLASHDATA=<range_start-range_end>
#			Defines the range of flash memory used to access EEPROM data
#
#	OSCCAL=<address>
#			The address where the OSCCAL sfr is located.
#
#	OSCCON=<address>
#			The address where the OSCCON sfr is located.
#
#	OSCHOW=<string>
#			How does the device calibrate its oscillator?
#			RETLW - The device's oscillator calibration constant is stored at the top
#			of program memory in a RETLW instruction, the compiler can assign this
#			to the OSCCAL sfr which is located at OSCCAL.
#			CALWORD - The device stores the oscillator constant in a calibration
#			word located in flash program memory.  The word is read from program
#			memory and assigned to OSCCAL.  The compiler does not perform this
#			operation.  It must be done by the user's program.
#
#	CONFIG=<range_start-range_end>
#			Define a new address range for the configuration register region if
#			the address range differs from the traditional range for its
#			architecture type.
#
#	IDLOC=<range_start-range_end>
#			Define a new address range for the user ID location region if
#			the address range differs from the traditional range for its
#			architecture type.
#
#	STACKDEPTH=<limit>
#			This is used set the maximum stack level depth for a processor. If not specified,
#			the default setting will be 2 for baseline PICs, 8 for midrange PICs and 16 for
#			high-end PICs and enhanced mid-range PICs.
#
#	VOLSFRS=<range_start>-<range_end>,...
#			Instructions generated by the compiler that access SFRs in the given memory
#			ranges will won't be optimized by the assembly optimizer
#
#	BANKSIZE=<size>
#			Maximum number of bytes in a RAM bank.
#
#	PAGESIZE=<size>
#			Maximum number of words in a program memory page.
#
#	LINEARBASE=<addr>
#			Base address of the virtual linear data memory, exclusive to enhanced mid-range devices.
#
#   PCBITS=<number of bits>
#           How many implemented bits are there in the PC?
#
#   EEADRBITS=<number of bits>
#           How many bits are available to address data EEPROM, if any.
#
#   BANKSELBITS=<number of bits>
#           Number of bits available for bank-selection.
#
#   EEPROMINT=<EEREG_INT|NVMREG_INT>
#   		Which register interface is used to access the device's EEPROM, if any.
#
#	SFR=<name>,<address>,<bit-width>
#			Describes a SFR of the device.  The address is in hexadecimal, and the bit-width decimal.
#			SFRs are sorted in order of address, and then by bit-width in descending order.  If an SFR duplicates
#			an address, then that SFR is an alias of the first with that address.  An SFR that has a bit-width
#			greater than the next, but the next also shares the same address, then that SFR is a joined SFR
#			of those that follow, but limited by its bit-width.
#
#	SFRFLD=<name>,<address>,<bit-position>,<bit-width>
#			Describes a SFR bit-field of the device.  The address is in hexadecimal, and the bit-width and
#			bit-position are decimal. SFRFLDs are sorted in order of address.
#
#	CONFIGPROG=<num_regs>,<delta>,<alignment>
#	IDLOCPROG=<num_regs>,<delta>,<alignment>
#			These describe the programming characteristics of configuration and user id memory.
#			Where,
#			<num_regs> = the number of registers (equivalent to a CWORD in CFGDATA files) per programming unit.
#			<delta> = the address delta between contiguous registers, i.e. the addresses of a CWORD.
#			<alignment> = the address alignment of programming units, where the address is that of the first CWORD
#							in the programming unit.
#

# this device is an alias of RF675K
[12F675K]
ALIAS=RF675K
ARCH=PIC14
BANKS=2
BANKSELBITS=0x2
BANKSIZE=0x80
CONFIG=2007-2007
CONFIGPROG=1,1,1
DATABANK=1
EEADRBITS=0x7
EEPROM=2100-217F
EEPROMINT=EEREG_INT
FLASHTYPE=READWRITE_B
FLASH_ERASE=1
FLASH_READ=1
FLASH_WRITE=1
IDLOC=2000-2003
IDLOCPROG=1,1,1
MAKE=MICROCHIP
OSCCAL=90
OSCHOW=RETLW
PAGESIZE=0x800
PCBITS=0xD
PROCID=5675
RAMBANK=20-5F
ROMSIZE=400
SFR=INDF,0,8
SFR=TMR0,1,8
SFR=PCL,2,8
SFR=STATUS,3,8
SFR=FSR,4,8
SFR=GPIO,5,8
SFR=PCLATH,A,8
SFR=INTCON,B,8
SFR=PIR1,C,8
SFR=TMR1,E,16
SFR=TMR1L,E,8
SFR=TMR1H,F,8
SFR=T1CON,10,8
SFR=CMCON,19,8
SFR=ADRESH,1E,8
SFR=ADCON0,1F,8
SFR=OPTION_REG,81,8
SFR=TRISIO,85,8
SFR=PIE1,8C,8
SFR=PCON,8E,8
SFR=OSCCAL,90,8
SFR=WPU,95,8
SFR=IOC,96,8
SFR=IOCB,96,8
SFR=VRCON,99,8
SFR=EEDATA,9A,8
SFR=EEDAT,9A,8
SFR=EEADR,9B,8
SFR=EECON1,9C,8
SFR=EECON2,9D,8
SFR=ADRESL,9E,8
SFR=ANSEL,9F,8
SFRFLD=INDF,0,0,8
SFRFLD=TMR0,1,0,8
SFRFLD=PCL,2,0,8
SFRFLD=C,3,0,1
SFRFLD=DC,3,1,1
SFRFLD=Z,3,2,1
SFRFLD=nPD,3,3,1
SFRFLD=nTO,3,4,1
SFRFLD=RP,3,5,2
SFRFLD=IRP,3,7,1
SFRFLD=RP0,3,5,1
SFRFLD=RP1,3,6,1
SFRFLD=CARRY,3,0,1
SFRFLD=ZERO,3,2,1
SFRFLD=FSR,4,0,8
SFRFLD=GP0,5,0,1
SFRFLD=GP1,5,1,1
SFRFLD=GP2,5,2,1
SFRFLD=GP3,5,3,1
SFRFLD=GP4,5,4,1
SFRFLD=GP5,5,5,1
SFRFLD=GPIO0,5,0,1
SFRFLD=GPIO1,5,1,1
SFRFLD=GPIO2,5,2,1
SFRFLD=GPIO3,5,3,1
SFRFLD=GPIO4,5,4,1
SFRFLD=GPIO5,5,5,1
SFRFLD=PCLATH,A,0,5
SFRFLD=GPIF,B,0,1
SFRFLD=INTF,B,1,1
SFRFLD=T0IF,B,2,1
SFRFLD=GPIE,B,3,1
SFRFLD=INTE,B,4,1
SFRFLD=T0IE,B,5,1
SFRFLD=PEIE,B,6,1
SFRFLD=GIE,B,7,1
SFRFLD=TMR0IF,B,2,1
SFRFLD=TMR0IE,B,5,1
SFRFLD=TMR1IF,C,0,1
SFRFLD=CMIF,C,3,1
SFRFLD=ADIF,C,6,1
SFRFLD=EEIF,C,7,1
SFRFLD=T1IF,C,0,1
SFRFLD=TMR1,E,0,16
SFRFLD=TMR1L,E,0,8
SFRFLD=TMR1H,F,0,8
SFRFLD=TMR1ON,10,0,1
SFRFLD=TMR1CS,10,1,1
SFRFLD=nT1SYNC,10,2,1
SFRFLD=T1OSCEN,10,3,1
SFRFLD=T1CKPS,10,4,2
SFRFLD=TMR1GE,10,6,1
SFRFLD=T1CKPS0,10,4,1
SFRFLD=T1CKPS1,10,5,1
SFRFLD=CM,19,0,3
SFRFLD=CIS,19,3,1
SFRFLD=CINV,19,4,1
SFRFLD=COUT,19,6,1
SFRFLD=CM0,19,0,1
SFRFLD=CM1,19,1,1
SFRFLD=CM2,19,2,1
SFRFLD=ADRESH,1E,0,8
SFRFLD=ADON,1F,0,1
SFRFLD=GO_nDONE,1F,1,1
SFRFLD=CHS,1F,2,2
SFRFLD=VCFG,1F,6,1
SFRFLD=ADFM,1F,7,1
SFRFLD=GO_DONE,1F,1,1
SFRFLD=CHS0,1F,2,1
SFRFLD=CHS1,1F,3,1
SFRFLD=nDONE,1F,1,1
SFRFLD=GO,1F,1,1
SFRFLD=PS,81,0,3
SFRFLD=PSA,81,3,1
SFRFLD=T0SE,81,4,1
SFRFLD=T0CS,81,5,1
SFRFLD=INTEDG,81,6,1
SFRFLD=nGPPU,81,7,1
SFRFLD=PS0,81,0,1
SFRFLD=PS1,81,1,1
SFRFLD=PS2,81,2,1
SFRFLD=TRISIO0,85,0,1
SFRFLD=TRISIO1,85,1,1
SFRFLD=TRISIO2,85,2,1
SFRFLD=TRISIO3,85,3,1
SFRFLD=TRISIO4,85,4,1
SFRFLD=TRISIO5,85,5,1
SFRFLD=TMR1IE,8C,0,1
SFRFLD=CMIE,8C,3,1
SFRFLD=ADIE,8C,6,1
SFRFLD=EEIE,8C,7,1
SFRFLD=T1IE,8C,0,1
SFRFLD=nBOR,8E,0,1
SFRFLD=nPOR,8E,1,1
SFRFLD=nBOD,8E,0,1
SFRFLD=CAL,90,2,6
SFRFLD=CAL0,90,2,1
SFRFLD=CAL1,90,3,1
SFRFLD=CAL2,90,4,1
SFRFLD=CAL3,90,5,1
SFRFLD=CAL4,90,6,1
SFRFLD=CAL5,90,7,1
SFRFLD=WPU0,95,0,1
SFRFLD=WPU1,95,1,1
SFRFLD=WPU2,95,2,1
SFRFLD=WPU4,95,4,1
SFRFLD=WPU5,95,5,1
SFRFLD=IOC0,96,0,1
SFRFLD=IOC1,96,1,1
SFRFLD=IOC2,96,2,1
SFRFLD=IOC3,96,3,1
SFRFLD=IOC4,96,4,1
SFRFLD=IOC5,96,5,1
SFRFLD=IOCB0,96,0,1
SFRFLD=IOCB1,96,1,1
SFRFLD=IOCB2,96,2,1
SFRFLD=IOCB3,96,3,1
SFRFLD=IOCB4,96,4,1
SFRFLD=IOCB5,96,5,1
SFRFLD=VR,99,0,4
SFRFLD=VRR,99,5,1
SFRFLD=VREN,99,7,1
SFRFLD=VR0,99,0,1
SFRFLD=VR1,99,1,1
SFRFLD=VR2,99,2,1
SFRFLD=VR3,99,3,1
SFRFLD=EEDATA,9A,0,8
SFRFLD=EEADR,9B,0,7
SFRFLD=RD,9C,0,1
SFRFLD=WR,9C,1,1
SFRFLD=WREN,9C,2,1
SFRFLD=WRERR,9C,3,1
SFRFLD=EECON2,9D,0,8
SFRFLD=ADRESL,9E,0,8
SFRFLD=ANS,9F,0,4
SFRFLD=ADCS,9F,4,3
SFRFLD=ANS0,9F,0,1
SFRFLD=ANS1,9F,1,1
SFRFLD=ANS2,9F,2,1
SFRFLD=ANS3,9F,3,1
SFRFLD=ADCS0,9F,4,1
SFRFLD=ADCS1,9F,5,1
SFRFLD=ADCS2,9F,6,1
STACKDEPTH=8
VOLSFRS=9C-9D
